/**
 * Users actions constant
 * @type {string}
 */
export const TOGGLE_LOGIN_MODE = 'TOGGLE_LOGIN_MODE';
export const MANUAL_LOGIN_USER = 'MANUAL_LOGIN_USER';
export const LOGIN_SUCCESS_USER = 'LOGIN_SUCCESS_USER';
export const LOGIN_ERROR_USER = 'LOGIN_ERROR_USER';
export const SIGNUP_USER = 'SIGNUP_USER';
export const SIGNUP_SUCCESS_USER = 'SIGNUP_SUCCESS_USER';
export const SIGNUP_ERROR_USER = 'SIGNUP_ERROR_USER';
export const LOGOUT_USER = 'LOGOUT_USER';
export const LOGOUT_SUCCESS_USER = 'LOGOUT_SUCCESS_USER';
export const LOGOUT_ERROR_USER = 'LOGOUT_ERROR_USER';
export const USER_INFO_RESET = 'USER_INFO_RESET';


/**
 * Navigations bar actions constant
 * @type {string}
 */
export const SET_NAVIGATION_ITEM_ACTIVE = 'SET_NAVIGATION_ITEM_ACTIVE';
export const SET_NAVIGATION_CONTENT = 'SET_NAVIGATION_CONTENT';
export const SET_MENUITEM_OPEN_CLOSE = 'SET_MENUITEM_OPEN_CLOSE';

/**
 * Plugins repository actions constant
 * @type {string}
 */
export const CREATE_PLUGIN_REQUEST = 'CREATE_PLUGIN_REQUEST';
export const CREATE_PLUGIN_SUCCESS = 'CREATE_PLUGIN_SUCCESS';
export const CREATE_PLUGIN_FAILURE = 'CREATE_PLUGIN_FAILURE';
export const GET_PLUGINS = 'GET_PLUGINS'; // Must define 'GET_PLUGINS', otherwise promisse middleware will get a undefined string
export const GET_PLUGINS_REQUEST = 'GET_PLUGINS_REQUEST';
export const GET_PLUGINS_SUCCESS = 'GET_PLUGINS_SUCCESS';
export const GET_PLUGINS_FAILURE = 'GET_PLUGINS_FAILURE';
export const SHOW_NOTIFICATION_DONE = 'SHOW_NOTIFICATION_DONE';
export const RESET_STORE_STATES = 'RESET_STORE_STATES';
export const SET_DATATABLE_SELECTED_DATA = 'SET_DATATABLE_SELECTED_DATA';
export const UPDATE_PLUGIN_REQUEST = 'UPDATE_PLUGIN_REQUEST';
export const UPDATE_PLUGIN_SUCCESS = 'UPDATE_PLUGIN_SUCCESS';
export const UPDATE_PLUGIN_FAILURE = 'UPDATE_PLUGIN_FAILURE';
export const DELETE_PLUGIN_REQUEST = 'DELETE_PLUGIN_REQUEST';
export const DELETE_PLUGIN_SUCCESS = 'DELETE_PLUGIN_SUCCESS';
export const DELETE_PLUGIN_FAILURE = 'DELETE_PLUGIN_FAILURE';
export const DOWNLOAD_PLUGIN_SUCCESS = 'DOWNLOAD_PLUGIN_SUCCESS';
export const DOWNLOAD_PLUGIN_FAILURE = 'DOWNLOAD_PLUGIN_FAILURE';

/**
 * Processes repository actions constant
 * @type {string}
 */
export const TOGGLE_REPO_WIZARD_EXPAND = 'TOGGLE_REPO_WIZARD_EXPAND';

/**
 * Plugin generator actions constant
 * @type {string}
 */
export const GENERATE_PLUGIN_SUCCESS = 'GENERATE_PLUGIN_SUCCESS';
export const GENERATE_PLUGIN_FAILURE = 'GENERATE_PLUGIN_FAILURE';

/**
 * Sensor data actions constant
 * @type {string}
 */
export const CREATE_SENSORDATA_REQUEST = 'CREATE_SENSORDATA_REQUEST';
export const CREATE_SENSORDATA_SUCCESS = 'CREATE_SENSORDATA_SUCCESS';
export const CREATE_SENSORDATA_FAILURE = 'CREATE_SENSORDATA_FAILURE';
export const GET_SENSORDATA = 'GET_SENSORDATA'; // Must define 'GET_SENSORDATA', otherwise promisse middleware will get a undefined string
export const GET_SENSORDATA_REQUEST = 'GET_SENSORDATA_REQUEST';
export const GET_SENSORDATA_SUCCESS = 'GET_SENSORDATA_SUCCESS';
export const GET_SENSORDATA_FAILURE = 'GET_SENSORDATA_FAILURE';
export const GET_SENSORDATA_ALL = 'GET_SENSORDATA_ALL';
export const GET_SENSORDATA_ALL_REQUEST = 'GET_SENSORDATA_ALL_REQUEST';
export const GET_SENSORDATA_ALL_SUCCESS = 'GET_SENSORDATA_ALL_SUCCESS';
export const GET_SENSORDATA_ALL_FAILURE = 'GET_SENSORDATA_ALL_FAILURE';